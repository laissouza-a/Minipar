
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEQUALS_EQUALSNOT_EQUALSLESS_THANGREATER_THANLESS_THAN_EQUALSGREATER_THAN_EQUALSCOMMA C_CHANNEL DIVIDE DOT ELSE EQUALS EQUALS_EQUALS GREATER_THAN GREATER_THAN_EQUALS ID IF INPUT INT LBRACE LESS_THAN LESS_THAN_EQUALS LPAREN MINUS NOT_EQUALS OUTPUT PAR PLUS RBRACE RECEIVE RPAREN SEND SEQ STRING TIMES WHILEprogram : stmtsstmts : stmt\n             | stmts stmtstmt : bloco_SEQ\n            | bloco_PAR\n            | atribuicao\n            | bloco_IF\n            | bloco_WHILE\n            | input_stmt\n            | output_stmt\n            | send_stmt\n            | receive_stmtbloco_SEQ : SEQ LBRACE stmts RBRACEbloco_PAR : PAR LBRACE stmts RBRACEatribuicao : ID EQUALS exprbloco_IF : IF LPAREN expr RPAREN LBRACE stmts RBRACE\n                | IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACEbloco_WHILE : WHILE LPAREN expr RPAREN LBRACE stmts RBRACEinput_stmt : INPUT LPAREN ID RPARENoutput_stmt : OUTPUT LPAREN output_args RPARENoutput_args : expr\n                   | STRING\n                   | output_args COMMA expr\n                   | output_args COMMA STRINGsend_stmt : SEND LPAREN C_CHANNEL COMMA expr RPARENreceive_stmt : RECEIVE LPAREN C_CHANNEL COMMA ID RPARENexpr : INT\n            | ID\n            | expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE expr\n            | expr EQUALS_EQUALS expr\n            | expr NOT_EQUALS expr\n            | expr LESS_THAN expr\n            | expr GREATER_THAN expr\n            | expr LESS_THAN_EQUALS expr\n            | expr GREATER_THAN_EQUALS expr\n            | expr DOT ID'
    
_lr_action_items = {'SEQ':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,13,13,13,13,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,13,13,13,13,-25,-26,-16,-18,13,13,-17,]),'PAR':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,14,14,14,14,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,14,14,14,14,-25,-26,-16,-18,14,14,-17,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,25,26,27,28,29,32,33,34,35,36,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,15,15,34,34,34,39,34,15,15,-28,-15,-27,-13,-14,34,34,34,34,34,34,34,34,34,34,75,-19,-20,34,34,81,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,15,15,15,15,-25,-26,-16,-18,15,15,-17,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,16,16,16,16,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,16,16,16,16,-25,-26,-16,-18,16,16,-17,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,17,17,17,17,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,17,17,17,17,-25,-26,-16,-18,17,17,-17,]),'INPUT':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,18,18,18,18,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,18,18,18,18,-25,-26,-16,-18,18,18,-17,]),'OUTPUT':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,19,19,19,19,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,19,19,19,19,-25,-26,-16,-18,19,19,-17,]),'SEND':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,20,20,20,20,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,20,20,20,20,-25,-26,-16,-18,20,20,-17,]),'RECEIVE':([0,2,3,4,5,6,7,8,9,10,11,12,22,23,24,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,89,90,91,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,21,21,21,21,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,21,21,21,21,-25,-26,-16,-18,21,21,-17,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,22,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,84,85,86,87,91,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-26,-16,-18,-17,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,22,32,33,34,35,36,45,46,60,61,65,66,67,68,69,70,71,72,73,74,75,82,83,84,85,86,87,90,91,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,45,46,-28,-15,-27,-13,-14,-19,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,86,87,-25,-26,-16,-18,91,-17,]),'LBRACE':([13,14,58,59,88,],[23,24,76,77,89,]),'EQUALS':([15,],[25,]),'LPAREN':([16,17,18,19,20,21,],[26,27,28,29,30,31,]),'INT':([25,26,27,29,47,48,49,50,51,52,53,54,55,56,62,63,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'STRING':([29,62,],[42,79,]),'C_CHANNEL':([30,31,],[43,44,]),'PLUS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,47,-27,47,47,47,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,47,47,]),'MINUS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,48,-27,48,48,48,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,48,48,]),'TIMES':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,49,-27,49,49,49,49,49,-31,-32,-33,-34,-35,-36,-37,-38,-39,49,49,]),'DIVIDE':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,50,-27,50,50,50,50,50,-31,-32,-33,-34,-35,-36,-37,-38,-39,50,50,]),'EQUALS_EQUALS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,51,-27,51,51,51,51,51,51,51,-33,-34,-35,-36,-37,-38,-39,51,51,]),'NOT_EQUALS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,52,-27,52,52,52,52,52,52,52,-33,-34,-35,-36,-37,-38,-39,52,52,]),'LESS_THAN':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,53,-27,53,53,53,53,53,53,53,-33,-34,-35,-36,-37,-38,-39,53,53,]),'GREATER_THAN':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,54,-27,54,54,54,54,54,54,54,-33,-34,-35,-36,-37,-38,-39,54,54,]),'LESS_THAN_EQUALS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,55,-27,55,55,55,55,55,55,55,-33,-34,-35,-36,-37,-38,-39,55,55,]),'GREATER_THAN_EQUALS':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,56,-27,56,56,56,56,56,56,56,-33,-34,-35,-36,-37,-38,-39,56,56,]),'DOT':([34,35,36,37,38,41,65,66,67,68,69,70,71,72,73,74,75,78,80,],[-28,57,-27,57,57,57,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,57,57,]),'RPAREN':([34,36,37,38,39,40,41,42,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,],[-28,-27,58,59,60,61,-21,-22,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,84,85,]),'COMMA':([34,36,40,41,42,43,44,65,66,67,68,69,70,71,72,73,74,75,78,79,],[-28,-27,62,-21,-22,63,64,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,]),'ELSE':([86,],[88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmts':([0,23,24,76,77,89,],[2,32,33,82,83,90,]),'stmt':([0,2,23,24,32,33,76,77,82,83,89,90,],[3,22,3,3,22,22,3,3,22,22,3,22,]),'bloco_SEQ':([0,2,23,24,32,33,76,77,82,83,89,90,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'bloco_PAR':([0,2,23,24,32,33,76,77,82,83,89,90,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'atribuicao':([0,2,23,24,32,33,76,77,82,83,89,90,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'bloco_IF':([0,2,23,24,32,33,76,77,82,83,89,90,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'bloco_WHILE':([0,2,23,24,32,33,76,77,82,83,89,90,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'input_stmt':([0,2,23,24,32,33,76,77,82,83,89,90,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'output_stmt':([0,2,23,24,32,33,76,77,82,83,89,90,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'send_stmt':([0,2,23,24,32,33,76,77,82,83,89,90,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'receive_stmt':([0,2,23,24,32,33,76,77,82,83,89,90,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'expr':([25,26,27,29,47,48,49,50,51,52,53,54,55,56,62,63,],[35,37,38,41,65,66,67,68,69,70,71,72,73,74,78,80,]),'output_args':([29,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmts','program',1,'p_program','sintatico.py',14),
  ('stmts -> stmt','stmts',1,'p_stmts','sintatico.py',18),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','sintatico.py',19),
  ('stmt -> bloco_SEQ','stmt',1,'p_stmt','sintatico.py',26),
  ('stmt -> bloco_PAR','stmt',1,'p_stmt','sintatico.py',27),
  ('stmt -> atribuicao','stmt',1,'p_stmt','sintatico.py',28),
  ('stmt -> bloco_IF','stmt',1,'p_stmt','sintatico.py',29),
  ('stmt -> bloco_WHILE','stmt',1,'p_stmt','sintatico.py',30),
  ('stmt -> input_stmt','stmt',1,'p_stmt','sintatico.py',31),
  ('stmt -> output_stmt','stmt',1,'p_stmt','sintatico.py',32),
  ('stmt -> send_stmt','stmt',1,'p_stmt','sintatico.py',33),
  ('stmt -> receive_stmt','stmt',1,'p_stmt','sintatico.py',34),
  ('bloco_SEQ -> SEQ LBRACE stmts RBRACE','bloco_SEQ',4,'p_bloco_SEQ','sintatico.py',38),
  ('bloco_PAR -> PAR LBRACE stmts RBRACE','bloco_PAR',4,'p_bloco_PAR','sintatico.py',42),
  ('atribuicao -> ID EQUALS expr','atribuicao',3,'p_atribuicao','sintatico.py',46),
  ('bloco_IF -> IF LPAREN expr RPAREN LBRACE stmts RBRACE','bloco_IF',7,'p_bloco_IF','sintatico.py',50),
  ('bloco_IF -> IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE','bloco_IF',11,'p_bloco_IF','sintatico.py',51),
  ('bloco_WHILE -> WHILE LPAREN expr RPAREN LBRACE stmts RBRACE','bloco_WHILE',7,'p_bloco_WHILE','sintatico.py',58),
  ('input_stmt -> INPUT LPAREN ID RPAREN','input_stmt',4,'p_input_stmt','sintatico.py',62),
  ('output_stmt -> OUTPUT LPAREN output_args RPAREN','output_stmt',4,'p_output_stmt','sintatico.py',66),
  ('output_args -> expr','output_args',1,'p_output_args','sintatico.py',70),
  ('output_args -> STRING','output_args',1,'p_output_args','sintatico.py',71),
  ('output_args -> output_args COMMA expr','output_args',3,'p_output_args','sintatico.py',72),
  ('output_args -> output_args COMMA STRING','output_args',3,'p_output_args','sintatico.py',73),
  ('send_stmt -> SEND LPAREN C_CHANNEL COMMA expr RPAREN','send_stmt',6,'p_send_stmt','sintatico.py',80),
  ('receive_stmt -> RECEIVE LPAREN C_CHANNEL COMMA ID RPAREN','receive_stmt',6,'p_receive_stmt','sintatico.py',84),
  ('expr -> INT','expr',1,'p_expr','sintatico.py',88),
  ('expr -> ID','expr',1,'p_expr','sintatico.py',89),
  ('expr -> expr PLUS expr','expr',3,'p_expr','sintatico.py',90),
  ('expr -> expr MINUS expr','expr',3,'p_expr','sintatico.py',91),
  ('expr -> expr TIMES expr','expr',3,'p_expr','sintatico.py',92),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','sintatico.py',93),
  ('expr -> expr EQUALS_EQUALS expr','expr',3,'p_expr','sintatico.py',94),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr','sintatico.py',95),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr','sintatico.py',96),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr','sintatico.py',97),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr','sintatico.py',98),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr','sintatico.py',99),
  ('expr -> expr DOT ID','expr',3,'p_expr','sintatico.py',100),
]
